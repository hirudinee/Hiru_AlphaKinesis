{"EDITOR_STATE":{"allProjectFiles":{"bf23de3c-04ee-4269-a0cc-b82f54501500":{"id":"bf23de3c-04ee-4269-a0cc-b82f54501500","parent":null,"name":"Hiru_AlphaKinesis","type":"DIRECTORY","isDirectory":true,"children":["8e596257-bbc5-4a4b-8b99-8c5874e68fcd","8872a64e-2254-4986-916d-f0b985395bfd","ae96c748-0d19-4780-ab20-a7b752bbac4f"],"isRemovable":false,"filePath":"Hiru_AlphaKinesis"},"8e596257-bbc5-4a4b-8b99-8c5874e68fcd":{"id":"8e596257-bbc5-4a4b-8b99-8c5874e68fcd","parent":"bf23de3c-04ee-4269-a0cc-b82f54501500","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_AlphaKinesis/lambda.js","code":"let AWS = require('aws-sdk');\nexports.handler = function(event, context, callback) {\n\n\n\tcallback(null,'Successfully executed');\n}","resources":["cweHiru"],"triggers":[{"resourceName":"cweHiru","config":{"mode":0,"name":"Hiru","description":"","eventPattern":{"source":["aws.s3"],"detail-type":["AWS API Call via CloudTrail"],"detail":{"eventName":["DeleteBucket"],"eventSource":["s3.amazonaws.com"]}}}}],"version":1},"8872a64e-2254-4986-916d-f0b985395bfd":{"id":"8872a64e-2254-4986-916d-f0b985395bfd","parent":"bf23de3c-04ee-4269-a0cc-b82f54501500","name":"lambda02.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_AlphaKinesis/lambda02.js","code":"let AWS = require('aws-sdk');\nlet connectionManager = require('./ConnectionManager');\nlet SL = require('@slappforge/slappforge-sdk');\nconst rds = new SL.AWS.RDS(connectionManager);\nconst sns = new AWS.SNS();\nexports.handler = function (event, context, callback) {\n\tsns.publish({\n\t\tMessage: 'this is a test message',\n\t\tMessageAttributes: {\n\t\t\t'AWS.SNS.SMS.SMSType': {\n\t\t\t\tDataType: 'String',\n\t\t\t\tStringValue: 'Transactional'\n\t\t\t},\n\t\t\t'AWS.SNS.SMS.SenderID': {\n\t\t\t\tDataType: 'String',\n\t\t\t\tStringValue: 'Hirudinee'\n\t\t\t}\n\t\t},\n\t\tPhoneNumber: '+94715397214'\n\t}).promise()\n\t\t.then(data => {\n\n\t\t\tconsole.log(\"successful , data : \", data);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"Error , error message : \", err);\n\n\t\t});\n\tsns.createPlatformEndpoint({\n\t\tPlatformApplicationArn: 'arn:aws:sns:us-east-1:480964559519:app/BAIDU/Test-Baidu-App',\n\t\tToken: '123456',\n\t\tCustomUserData: 'test',\n\t\tAttributes: {\n\t\t\t'test': '001',\n\t\t},\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log(\"successful , data : \", data);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(\"Error , error message : \", err);\n\t\t});\n\n\t// You can pass the existing connection to this function.\n\t// A new connection will be created if it's not present as the third param \n\t// You must always end/destroy the DB connection after it's used\n\trds.query({\n\t\tinstanceIdentifier: 'hirutest',\n\t\tquery: 'Select * from customers',\n\t\tinserts: []\n\t}, function (error, results, connection) {\n\t\tif (error) {\n\t\t\tconsole.log(\"Error occurred\");\n\t\t\tthrow error;\n\t\t} else {\n\t\t\tconsole.log(\"Success\")\n\t\t\tconsole.log(results);\n\t\t}\n\n\t\tconnection.end();\n\t});\n\n\n\tcallback(null, 'Successfully executed');\n}","resources":["snsDirectSMSResource","kinesisHiru","kinesisHiru02","snsusEast1appBAIDUTestBaiduApp","rds-hirutest"],"triggers":[],"version":99},"ae96c748-0d19-4780-ab20-a7b752bbac4f":{"id":"ae96c748-0d19-4780-ab20-a7b752bbac4f","parent":"bf23de3c-04ee-4269-a0cc-b82f54501500","name":"ConnectionManager.js","type":"JS_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"Hiru_AlphaKinesis/ConnectionManager.js","code":"module.exports=function(){\n\n    this.dbConnections = [];\n    \n    this.dbConnections[\"hirutest\"] = {\n        host: process.env.EndPoint_hirutest,\n        port: 3306,\n        user: \"test\",\n        password: \"12345678\",\n        database: \"hiru\",\n    };\n    \n    };","resources":[],"triggers":[]}},"rootNode":"bf23de3c-04ee-4269-a0cc-b82f54501500","openFiles":["8e596257-bbc5-4a4b-8b99-8c5874e68fcd","8872a64e-2254-4986-916d-f0b985395bfd"],"currentFileId":"8872a64e-2254-4986-916d-f0b985395bfd","resources":{"cweHiru":{"name":"cweHiru","type":"CLOUD_WATCH","config":{"mode":0,"name":"Hiru","description":"","eventPattern":{"source":["aws.s3"],"detail-type":["AWS API Call via CloudTrail"],"detail":{"eventName":["DeleteBucket"],"eventSource":["s3.amazonaws.com"]}}},"globallyEditable":true,"usage":{"8e596257-bbc5-4a4b-8b99-8c5874e68fcd":{"operations":{},"occurrence":1,"triggers":[{"mode":0,"name":"Hiru","description":"","eventPattern":{"source":["aws.s3"],"detail-type":["AWS API Call via CloudTrail"],"detail":{"eventName":["DeleteBucket"],"eventSource":["s3.amazonaws.com"]}}}]}}},"snsDirectSMSResource":{"name":"snsDirectSMSResource","type":"SNS","config":{"snsType":1,"numbers":["+94715397214"]},"globallyEditable":false,"usage":{"8872a64e-2254-4986-916d-f0b985395bfd":{"operations":{"publish":[{"Message":"this is a test message","MessageAttributes":{"AWS.SNS.SMS.SMSType":{"DataType":"String","StringValue":"Transactional"},"AWS.SNS.SMS.SenderID":{"DataType":"String","StringValue":"Hirudinee"}},"PhoneNumber":"+94715397214"}]},"occurrence":1,"triggers":[]}}},"kinesisHiru":{"name":"kinesisHiru","type":"Kinesis","config":{"mode":0,"StreamName":"Hiru","shards":5,"region":"us-east-1","operation":"-see  in init params :)"},"globallyEditable":true,"usage":{}},"kinesisHiru02":{"name":"kinesisHiru02","type":"Kinesis","config":{"mode":0,"StreamName":"Hiru02","region":"us-east-1","triggerParams":{"StartingPosition":"LATEST","BatchSize":100}},"globallyEditable":true,"usage":{}},"snsusEast1appBAIDUTestBaiduApp":{"name":"snsusEast1appBAIDUTestBaiduApp","type":"SNS","config":{"appArn":"arn:aws:sns:us-east-1:480964559519:app/BAIDU/Test-Baidu-App","appName":"Test-Baidu-App","appType":"BAIDU","appRegion":"us-east-1","snsType":2},"globallyEditable":false,"usage":{"8872a64e-2254-4986-916d-f0b985395bfd":{"operations":{"createPlatformEndpoint":[{"PlatformApplicationArn":"arn:aws:sns:us-east-1:480964559519:app/BAIDU/Test-Baidu-App","Token":"123456","CustomUserData":"test","Attributes":{"test":"001"}}]},"occurrence":1,"triggers":[]}}},"s3hirutest":{"name":"s3hirutest","type":"S3","config":{"mode":1,"bucket":{"region":"us-east-1","name":"hiru.test"}},"globallyEditable":false,"usage":{}},"rds-hirutest":{"name":"rds-hirutest","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.7.19"},"rdsSetting":{"instanceIdentifier":"hirutest","masterUsername":"test","masterPassword":"h@s1n1H1rud1n##"},"rdsDBOptions":{"dbName":"hiru","dbPort":"3306"},"rdsInstanceArn":"","Host":"process.env.EndPoint_hirutest","doesExist":false,"initializationQuery":"","alreadyDeployed":false},"rdsInstanceResources":[],"selectedRegion":"us-east-1","mode":0,"additionalFiles":[],"params":{"query":"Select * from customers","inserts":""},"isGlobalEditMode":false,"enableInject":true},"globallyEditable":true,"usage":{"8872a64e-2254-4986-916d-f0b985395bfd":{"operations":{"query":[{"instanceIdentifier":"hirutest","query":"Select * from customers","inserts":[]}]},"occurrence":1,"triggers":[]}}}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true},"SL":"0.0.3"}},"lambdaId":"8e596257-bbc5-4a4b-8b99-8c5874e68fcd","changeExistingProject":false,"additionalFiles":[]},"PROJECT_META":{"projectName":"Hiru_AlphaKinesis","projectDescription":"","projectVersion":"1.0.0","repoName":"Hiru_AlphaKinesis","repoUrl":"https://github.com/hirudinee/Hiru_AlphaKinesis","lastSave":1517566900484}}